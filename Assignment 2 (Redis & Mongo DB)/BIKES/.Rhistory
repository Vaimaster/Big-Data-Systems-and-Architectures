library(robotstxt)
install.packages("robotstxt")
install.packages("rvest")
###################################
#### Two Categorical Variables #####
####################################
masticha <- read.table(file.choose(), header = T)
###################################
#### Two Categorical Variables #####
####################################
masticha <- read.table(file.choose(), header = T)
tab1 <- table(masticha$gender, masticha$a4_drinks)
tab1
install.packages("installr")
install.packages("installr")
library(installr)
updateR()
installed.packages()
update.packages(checkBuilt=TRUE)
install.packages(c("caret", "cli", "dbplyr", "dplyr", "dtplyr", "gtable", "modelr", "ps", "rlang", "stringi", "tibble", "vctrs"))
# Load libraries
library("jsonlite")
library("mongolite")
library("stringr")
install.packages(c("caret", "dplyr", "ps", "tibble", "vctrs"))
install.packages(c("caret", "dplyr", "ps", "tibble", "vctrs"))
installed.packages()
update.packages(checkBuilt=TRUE)
version
packageStatus()
install.packages('MASS')
install.packages(c("caret", "dplyr", "ps", "tibble", "vctrs"))
library("mongolite")
library("jsonlite")
library("stringr")
library("sjmisc")
setwd("C:/Users/User/Desktop/Μεταπτυχιακό/2) Big Data Systems and Architectures/6&7) MongoDB/Redis-Mongo Assignment-v1.3/Assignment Solution/BIKES")
user = ""
pass = ""
host = ""
uri = sprintf("mongodb+srv://%s:%s@%s/assignment?retryWrites=true&w=majority", user, pass, host)
bikes <- mongo(collection = "bikes",  db = "assignment", url = uri)
# Install the mongolite driver
# install.packages("mongolite")
# Load mongolite
library("mongolite")
# Open a connection to MongoDB
m <- mongo(collection = "mycol",  db = "mydb", url = "mongodb://localhost")
# Insert one document
m$insert('{"first_name":"Spiros","last_name":"Safras","age":30}')
# Insert many documents (Nice idea. Do it this way. You don't want to insert ~30K records one by one.)
m$insert(c('{"first_name":"Michael","last_name":"Burnham","age":34}','{"first_name":"Saru","last_name":"Kelpien","age":225}'))
# Find records with age >= 30
m$find('{"age": { "$gte": 30 }}')
# Find records with age >= 30 and return only the first name
m$find('{"age": { "$gte": 30 }}','{ "first_name": 1, "_id": 0 }')
# Insert some more data
m$insert(c('{"first_name":"Michael","last_name":"Scott","age":48}','{"first_name":"Michael","last_name":"Jackson","age":55}'))
# Calculate the AVG age and COUNT of all the entries, grouped by the first name
m$aggregate('[{"$group":{"_id":"$first_name", "avg_age": {"$avg":"$age"}, "count": {"$sum":1}}}]')
# The rest is described in the documentation:
# How to query data: https://jeroen.github.io/mongolite/query-data.html#query-syntax
# How to Insert / Update / Delete: https://jeroen.github.io/mongolite/manipulate-data.html
# How to do aggregations: https://jeroen.github.io/mongolite/calculation.html
# How to load json files
# Install the jsonlite package
# install.packages("jsonlite")
# Load jsonlite
library("jsonlite")
# Save JSON to a variable
json_data <- fromJSON(readLines("C:\\Users\\Spiros\\Desktop\\Redis-Mongo Assignment\\tmp\\20156358.json", encoding="UTF-8"))
# Install the mongolite driver
# install.packages("mongolite")
# Load mongolite
library("mongolite")
# Open a connection to MongoDB
m <- mongo(collection = "mycol",  db = "mydb", url = "mongodb://localhost")
# Insert one document
m$insert('{"first_name":"Spiros","last_name":"Safras","age":30}')
# Insert many documents (Nice idea. Do it this way. You don't want to insert ~30K records one by one.)
m$insert(c('{"first_name":"Michael","last_name":"Burnham","age":34}','{"first_name":"Saru","last_name":"Kelpien","age":225}'))
# Find records with age >= 30
m$find('{"age": { "$gte": 30 }}')
# Find records with age >= 30 and return only the first name
m$find('{"age": { "$gte": 30 }}','{ "first_name": 1, "_id": 0 }')
# Insert some more data
m$insert(c('{"first_name":"Michael","last_name":"Scott","age":48}','{"first_name":"Michael","last_name":"Jackson","age":55}'))
# Calculate the AVG age and COUNT of all the entries, grouped by the first name
m$aggregate('[{"$group":{"_id":"$first_name", "avg_age": {"$avg":"$age"}, "count": {"$sum":1}}}]')
# How to load json files
# Install the jsonlite package
# install.packages("jsonlite")
# Load jsonlite
library("jsonlite")
# Save JSON to a variable
json_data <- fromJSON(readLines("C:/Users/User/Desktop/Μεταπτυχιακό/2) Big Data Systems and Architectures/6&7) MongoDB/Redis-Mongo Assignment-v1.3/Redis-Mongo Assignment-v1.3/tmp/20156358.json", encoding="UTF-8"))
# Have a look at the data
json_data
# Get the Mileage
json_data$ad_data$Mileage
# Change the Mileage
json_data$ad_data$Mileage <- gsub(" km", "", json_data$ad_data$Mileage)
json_data$ad_data$Mileage <- gsub(",", "", json_data$ad_data$Mileage)
# Get the updated Mileage
json_data$ad_data$Mileage
# Convert the r object back to JSON format
json_data <- toJSON(json_data, auto_unbox = TRUE)
# Have a look at the JSON string
json_data
# Open a connection to MongoDB
m <- mongo(collection = "ads",  db = "mydb", url = "mongodb://localhost")
# Insert this JSON object to MongoDB
m$insert(json_data)
# Check if it has been inserted
m$find('{}')
# List of libraries to check
libraries <- c("mongolite", "lubridate", "httpuv", "jsonlite", "rmutil", "stringr", "dplyr", "rmarkdown")
# Check if each library is installed and install it if necessary
for (lib in libraries) {
if (!requireNamespace(lib, quietly = TRUE)) {
install.packages(lib)
library(lib, character.only = TRUE)
}
}
# Load the libraries
library(mongolite)
library(lubridate)
library(httpuv)
library(jsonlite)
library(rmutil)
library(stringr)
library(dplyr)
library(rmarkdown)
nstall required packages
#install packages below are commented. Uncoment to install if required
#install required packages
# install.packages("jsonlite")
# install.packages("httpuv")
# install.packages("mongolite")
# install.packages("lubridate")
# install.packages("rmutil")
# install.packages("stringr")
# install.packages("dplyr")
# install.packages("rmarkdown")
#load required packages
library(mongolite)
library(lubridate)
library(httpuv)
library(jsonlite)
library(rmutil)
library(stringr)
library(dplyr)
library(rmarkdown)
#2.1	Add your data to MongoDB.
#read file with paths of json files to a list
my_data <-
read.delim("C:/Users/User/Desktop/Μεταπτυχιακό/2) Big Data Systems and Architectures/6&7) MongoDB/Redis-Mongo Assignment-v1.3/Assignment Solution/BIKES/files_list.txt")
install.packages("mongolite")
install.packages("mongolite")
install.packages("mongolite")
install.packages("mongolite")
install.packages("lubridate")
install.packages("httpuv")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("rmutil")
install.packages("stringr")
install.packages("dplyr")
install.packages("rmarkdown")
#install packages below are commented. Uncoment to install if required
#install required packages
# install.packages("jsonlite")
# install.packages("httpuv")
# install.packages("mongolite")
# install.packages("lubridate")
# install.packages("rmutil")
# install.packages("stringr")
# install.packages("dplyr")
# install.packages("rmarkdown")
#load required packages
library(mongolite)
library(lubridate)
library(httpuv)
library(jsonlite)
library(rmutil)
library(stringr)
library(dplyr)
library(rmarkdown)
#2.1	Add your data to MongoDB.
#read file with paths of json files to a list
my_data <-
read.delim("C:/Users/User/Desktop/Μεταπτυχιακό/2) Big Data Systems and Architectures/6&7) MongoDB/Redis-Mongo Assignment-v1.3/Assignment Solution/BIKES/files_list.txt")
